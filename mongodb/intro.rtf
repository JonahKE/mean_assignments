{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red47\green255\blue18;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c15686\c99608\c7843;\csgray\c0\c71243;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \CocoaLigature0 // 1. Create a database called my_first_db\
use my_first_db\
switched to db my_first_db\
\
// 2. Create a collection called students\
> db.createCollection('students')\
\{ "ok" : 1 \}\
\
// 3. Add 5 students to the collection with name,  home state, lucky number, and birthday\
> db.students.insert(\{name: "Yasmeen" , home_state: "MD", lucky_number: 11, birthday: \{month: 8, day: 11, year: 1997\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Kate" , home_state: "VA", lucky_number: 7 , birthday: \{month: 4, day: 28, year: 1996\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Casey", home_state: "NY", lucky_number: 4, birthday: \{month: 12, day: 17, year: 1995\}\})\
WriteResult(\{ "nInserted" : 1 \})\
 db.students.insert(\{name: "Ayla", home_state: "NY", lucky_number: 9, birthday: \{month: 9, day: 22, year: 1999\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Sally", home_state: "CT", lucky_number: 12, birthday: \{month: 7, day: 18, year: 1998\}\})\
WriteResult(\{ "nInserted" : 1 \})\
\
// 4. Show all students\
> db.students.find().pretty()\
\
// 5. Find all students from one home state\
> db.students.find(\{home_state: "NY"\}).pretty()\
\
// 6. Find students w lucky number greater than 3, less than or equal to 10, and between 1-9 inclusive\
> db.students.find(\{lucky_number: \{$gt: 3\}\}).pretty()\
> db.students.find(\{lucky_number: \{$lte: 10\}\}).pretty()\
> db.students.find(\{$and:[\{lucky_number:\{$lte:9\}\}, \{lucky_number:\{$gte:1\}\}]\}).pretty()\
\
//7. Add a new field to each student in one operation called \'93interests\'94 as an array. It should contain \'91brunch\'92, \'91coding\'92, and \'91mongodb\'92 as interests. DO IT IN ONE OPERATION\
> db.students.update(\{\},\{$set: \{"interests":['coding', 'brunch', 'MongoDB']\}\},\{multi:true\})\
\
// 8. Add some unique interests to some of your students\
> db.students.update(\{name: "Yasmeen"\},\{$push: \{interests: "horseback riding"\}\})\
> db.students.update(\{name: "Kate"\},\{$push: \{interests: "research"\}\})\
> db.students.update(\{name: "Ayla"\},\{$push: \{interests: "yellow"\}\})\
\
// 9. Add \'93taxes\'94 to someone\'92s interests and then remove it\
> db.students.update(\{name: "Casey"\},\{$push: \{interests: "taxes"\}\})\
> db.students.update(\{name: "Casey"\},\{$pull: \{interests: "taxes"\}\})\
\
// 10. Remove all students from NY\
> db.students.remove(\{home_state: "NY"\})\
WriteResult(\{ "nRemoved" : 2 \})\
\
// 11. Remove a student by name\
> db.students.remove(\{name: "Sally"\})\
\
// 12. Remove just one student who has a lucky number greater than 5\
> db.students.remove(\{lucky_number : \{$gt: 5\}\}, true)\
\
// 13. Add a field to each student called number_of_belts and set it to 0\
> db.students.update(\{\}, \{$set: \{number_of_belts: 0\}\})\
\
// 14. Add 1 to this field for all students in NY\
> db.students.update(\{home_state: \'93NY\'94\}, \{$inc: \{number_of_belts: 1\}\},\{multi:true\})\
\
// 15. Rename number_of_belts to belts_earned\
> db.students.update(\{\}. \{$rename: \{\'93number_of_belts\'94: \'93belts_earned\'94\}\})\
\
// 16. Remove the lucky_number field\
> db.students.update(\{\}, \{$unset:\{lucky_number:""\}\},\{multi:true\})\
\
// 17. Add an updated_on field with value as current date\
> db.students.update(\{\}, \{$currentDate:\{updated_on:true\}\},\{multi:true\})\
\
\
\
}